name: Update ClearURLs Rules
on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: "0 4 * * 1" # Every Monday at 04:00 UTC
jobs:
  update-rules:
    name: Check for new ClearURLs rules
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709

      - name: Set up Node.js
        uses: actions/setup-node@5e2628c959b9ade56971c0afcebbe5332d44b398
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download latest ClearURLs rules
        id: download
        run: |
          # Download to a temporary location outside the repo
          curl --fail -sSL "https://gitlab.com/ClearURLs/rules/-/raw/master/data.min.json" -o /tmp/rules.json
        # Continue to the next step even if curl fails, so we don't block the workflow on temporary network issues.
        continue-on-error: true

      - name: Format downloaded JSON with Biome
        id: format
        if: steps.download.outcome == 'success'
        run: |
          # Format the downloaded file with your project's Biome configuration
          npx biome format --write /tmp/rules.json
        continue-on-error: true

      - name: Configure Git
        if: steps.download.outcome == 'success' && steps.format.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if file has changes
        id: check_changes
        if: steps.download.outcome == 'success' && steps.format.outcome == 'success'
        run: |
          # Reset the entire working directory to clean state
          git checkout HEAD -- .

          # Create directory if it doesn't exist
          mkdir -p clearurls-data

          # Copy the formatted file from temp location to repo
          cp /tmp/rules.json clearurls-data/rules.json

          # Now check if there are any changes
          if git diff --quiet --exit-code clearurls-data/rules.json; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No changes detected in the rules file"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Changes detected in the rules file"

            # Show a summary of what changed (for debugging)
            echo "üìù Summary of changes:"
            git diff --stat clearurls-data/rules.json || true
          fi

      - name: Create Pull Request if rules were updated
        id: create_pr
        # This step only runs if download was successful AND formatting worked AND there are changes
        if: steps.download.outcome == 'success' && steps.format.outcome == 'success' && steps.check_changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@1310d7dab503600742045e6fd4b84dda64352858
        with:
          # GITHUB_TOKEN should now work with proper repository permissions
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update ClearURLs rules"
          title: "Update ClearURLs Rules"
          body: |
            This is an automated PR to update the `clearurls-data/rules.json` file to the latest version from the official ClearURLs GitLab repository.

            **Changes:**
            - Updated ClearURLs rules to latest version
            - Formatted with Biome to match project standards
            - Automated update from scheduled workflow

            Please review the changes to ensure they are safe to merge.

            ---
            *This PR was automatically created by GitHub Actions.*
          branch: "chore/update-clearurls-rules"
          delete-branch: true
          # Assign labels to the PR for better organization.
          labels: "dependencies, automated"
          # Set an author for the commit.
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          committer: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Cleanup on failure
        if: failure()
        run: |
          # Remove the temporary file if anything failed
          rm -f /tmp/rules.json

      - name: Report Status
        # This step runs every time to provide clear feedback.
        if: always()
        run: |
          if [[ "${{ steps.download.outcome }}" != "success" ]]; then
            echo "‚ùå Failed to download the latest ClearURLs rules. No action was taken."
            echo "This could be due to network issues or the source being temporarily unavailable."
          elif [[ "${{ steps.format.outcome }}" != "success" ]]; then
            echo "‚ùå Failed to format the downloaded rules with Biome. No action was taken."
            echo "This could be due to invalid JSON or Biome configuration issues."
          elif [[ "${{ steps.check_changes.outputs.has_changes }}" != "true" ]]; then
            echo "‚ÑπÔ∏è No changes were detected in the rules file. No pull request was needed."
          elif [[ "${{ steps.create_pr.outputs.pull-request-operation }}" == "created" ]]; then
            echo "‚úÖ A new pull request was successfully created: ${{ steps.create_pr.outputs.pull-request-url }}"
          elif [[ "${{ steps.create_pr.outputs.pull-request-operation }}" == "updated" ]]; then
            echo "‚úÖ The existing pull request was updated with new commits."
          else
            echo "‚ö†Ô∏è Unexpected state: Changes detected but no PR operation reported."
          fi
